<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.milkms.db.dao.PurchaseMapper">
	<resultMap id="baseResultMap" type="com.cy.milkms.db.entity.Purchase">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="time" property="time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="total_price" property="total_price"  jdbcType="DOUBLE"/>
		<result column="created" property="created" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="updated" property="updated" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="purchaseQueryMap" type="com.cy.milkms.db.query.PurchaseQuery" extends="baseResultMap">
		<result column="milk_name" property="milk_name" jdbcType="VARCHAR" />
		<result column="quantity" property="quantity" jdbcType="INTEGER"/>
		<result column="price" property="price" jdbcType="DOUBLE"/>
		<result column="total_amount" property="total_amount" jdbcType="DOUBLE"/>
	</resultMap>
	
	<select id="getPurchaseByConditon" resultMap="purchaseQueryMap">
		select 
			purchase.id, purchase.time, purchase.total_price, purchase.status, milk.milk_name, detailed.quantity, detailed.price, detailed.total_price as total_amount
		from purchase, purchase_detailed as detailed, milk
		where
			purchase.id = detailed.purchase_id and milk.id = detailed.milk_id
			<choose>
				<when test="purchaseID != null and purchaseID != ''">
					and purchase.id = #{purchaseID}
				</when>
				<otherwise>
					and purchase.id in (select t.id from (select id from purchase order by id desc limit #{pager.start}, #{pager.rows}) as t)
				</otherwise>
			</choose>
			ORDER BY id DESC
	</select>
	
	<select id="getPurchaseByConditionCount" resultType="int">
		select 
			count(purchase.id)
		from purchase, purchase_detailed as detailed, milk
		where
			purchase.id = detailed.purchase_id and milk.id = detailed.milk_id
			<if test="purchaseID != null and purchaseID != ''">
				and purchase.id = #{purchaseID}
			</if>
			<if test="startTime != null and startTime != ''">
				and #{startTime} &gt; time
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime} &lt; time
			</if>
	</select>	
	
	<insert id="addPurchase" useGeneratedKeys="true" keyProperty="purchase.id">
		insert into purchase(time, total_price, created, updated, status)
		values(#{purchase.time}, #{purchase.total_price}, #{purchase.created}, #{purchase.updated}, #{purchase.status})
	</insert>
	
	<update id="updatePurchaseOff">
		update purchase set status=2 where id=#{purchaseID}
	</update>
</mapper>

