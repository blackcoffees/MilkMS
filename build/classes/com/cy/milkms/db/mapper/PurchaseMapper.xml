<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.milkms.db.dao.PurchaseMapper">
	<resultMap id="baseResultMap" type="com.cy.milkms.db.entity.Purchase">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="time" property="time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="total_amount" property="total_amount"  jdbcType="DOUBLE"/>
		<result column="created" property="created" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="updated" property="updated" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="totalPurchaseQueryMap" type="com.cy.milkms.db.query.TotalPurchaseQuery">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="totalPurchaseAmount" property="totalPurchaseAmount"  jdbcType="DOUBLE"/>
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="purchase_id" property="purchase_id" jdbcType="INTEGER"/>
		<result column="milk_id" property="milk_id" jdbcType="INTEGER"/>
		<result column="number" property="number" jdbcType="INTEGER"/>
		<result column="purchase_price" property="purchase_price" jdbcType="DOUBLE"/>
		<result column="total_amount" property="total_amount" jdbcType="DOUBLE"/>
		<result column="created" property="created" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result column="updated" property="updated" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
	</resultMap>
	
	<resultMap id="totalPurchaseIDMap" type="com.cy.milkms.db.query.TotalPurchaseIDsQuery">
		<result column="id" property="id" jdbcType="INTEGER"/>
	</resultMap>
	
	<select id="getPurchaseByConditon" resultMap="totalPurchaseQueryMap">
		select 
			purchase_id as id, milk_name as name, detailed.number, detailed.purchase_price, detailed.total_amount, purchase.total_amount as totalPurchaseAmount, time, purchase.status
		from purchase, purchase_detailed as detailed, milk
		where
			purchase.id = detailed.purchase_id and milk.id = detailed.milk_id
			and purchase.id in 
			<foreach collection="purchaseIDs" item="item" index="index" open="(" separator="," close=")">  
				#{item}  
		    </foreach>  
			<if test="startTime != null and startTime != ''">
				and #{startTime} &gt; time
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime} &lt; time
			</if>
		order by purchase.id desc
	</select>
	
	<select id="getPurchaseByConditionByID" resultMap="totalPurchaseIDMap">
		select 
			purchase_id as id
		from purchase, purchase_detailed as detailed, milk
		where
			purchase.id = detailed.purchase_id and milk.id = detailed.milk_id
			<if test="purchaseID != null and purchaseID != ''">
				and id = #{purchaseID}
			</if>
			<if test="startTime != null and startTime != ''">
				and #{startTime} &gt; time
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime} &lt; time
			</if>
		order by purchase.id desc
		limit #{pager.start}, #{pager.rows}
	</select>
	
	<select id="getPurchaseByConditionCount" resultType="int">
		select 
			count(purchase_id)
		from purchase, purchase_detailed as detailed, milk
		where
			purchase.id = detailed.purchase_id and milk.id = detailed.milk_id
			<if test="purchaseID != null and purchaseID != ''">
				and id = #{purchaseID}
			</if>
			<if test="startTime != null and startTime != ''">
				and #{startTime} &gt; time
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime} &lt; time
			</if>
	</select>	
	
	<insert id="addPurchase" useGeneratedKeys="true" keyProperty="purchase.id">
		insert into purchase(time, total_amount, created, updated)
		values(#{purchase.time}, #{purchase.total_amount}, #{purchase.created}, #{purchase.updated})
	</insert>
</mapper>

